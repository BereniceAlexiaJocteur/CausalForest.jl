install.packages("grf")
R.home()
setwd("~/")
setwd("~/.julia/dev/CausalForest/notebooks")
setwd("~/.julia/dev/CausalForest/data")
data = read.csv2("synthetic_causal.csv")
data = read.csv2("synthetic_causal.csv")
("synthetic_causal.csv")
View(data)
library("grf")
install.packages("grf")
library("grf")
X = data[:,2:11]
X = data[,2:11]
cf = causal_forest(X, Y, W, num.trees = 500)
X = as.numeric(data[,2:11])
data = read.csv2("synthetic_causal.csv", sep=".")
library("grf")
data = read.csv2("synthetic_causal.csv", dec=".")
library("grf")
X = data[,2:11]
W = data[,12]
Y = data[,13]
cf = causal_forest(X, Y, W, num.trees = 500)
install.packages("Metrics")
data = read.csv2("synthetic_causal.csv", dec=".")
library("grf")
library("Metrics")
X = data[,2:11]
W = data[,12]
Y = data[,13]
cf = causal_forest(X, Y, W, num.trees = 500)
errors_1 =
for (i in 1:100){
set.seed(i)
Xtest = matrix(runif(10000),nrow=1000)
pred = predict(cf, Xtest)
true_effect = Xtest[, 1]>0.5
errors_1[i] = rmse(true_effect, pred)
}
mean(errors_1)
var(errors_1)
data = read.csv2("synthetic_causal.csv", dec=".")
library("grf")
library("Metrics")
X = data[,2:11]
W = data[,12]
Y = data[,13]
cf = causal_forest(X, Y, W, num.trees = 500)
errors_1 = rep(0, 100)
for (i in 1:100){
set.seed(i)
Xtest = matrix(runif(10000),nrow=1000)
pred = predict(cf, Xtest)
true_effect = Xtest[, 1]>0.5
errors_1[i] = rmse(true_effect, pred)
}
mean(errors_1)
var(errors_1)
warnings()
data = read.csv2("synthetic_causal.csv", dec=".")
library("grf")
library("Metrics")
X = data[,2:11]
W = data[,12]
Y = data[,13]
cf = causal_forest(X, Y, W, num.trees = 500)
errors_1 = rep(0, 100)
for (i in 1:100){
set.seed(i)
Xtest = matrix(runif(10000),nrow=1000)
pred = predict(cf, Xtest)
true_effect = as.numeric(Xtest[, 1]>0.5)
errors_1[i] = rmse(true_effect, pred)
}
mean(errors_1)
var(errors_1)
warnings()
data = read.csv2("synthetic_causal.csv", dec=".")
library("grf")
library("Metrics")
X = data[,2:11]
W = data[,12]
Y = data[,13]
cf = causal_forest(X, Y, W, num.trees = 500)
errors_1 = rep(0, 100)
for (i in 1:100){
set.seed(i)
Xtest = matrix(runif(10000),nrow=1000)
pred = predict(cf, Xtest)
print(pred)
true_effect = as.numeric(Xtest[, 1]>0.5)
print(true_effect)
errors_1[i] = rmse(true_effect, pred)
}
mean(errors_1)
var(errors_1)
errors_1
data = read.csv2("synthetic_causal.csv", dec=".")
library("grf")
library("Metrics")
X = data[,2:11]
W = data[,12]
Y = data[,13]
cf = causal_forest(X, Y, W, num.trees = 500)
errors_1 = rep(0, 100)
for (i in 1:100){
set.seed(i)
Xtest = matrix(runif(10000),nrow=1000)
pred = as.numeric(predict(cf, Xtest))
print(pred)
true_effect = as.numeric(Xtest[, 1]>0.5)
print(true_effect)
errors_1[i] = rmse(true_effect, pred)
}
mean(errors_1)
var(errors_1)
data = read.csv2("synthetic_causal.csv", dec=".")
library("grf")
library("Metrics")
X = data[,2:11]
W = data[,12]
Y = data[,13]
cf = causal_forest(X, Y, W, num.trees = 500)
errors_1 = rep(0, 100)
for (i in 1:100){
set.seed(i)
Xtest = matrix(runif(10000),nrow=1000)
pred = predict(cf, Xtest)$predictions
print(pred)
true_effect = as.numeric(Xtest[, 1]>0.5)
print(true_effect)
errors_1[i] = rmse(true_effect, pred)
}
mean(errors_1)
var(errors_1)
split_frequencies(cf,20)
source("~/.julia/dev/CausalForest/notebooks/R code GRF.R")
